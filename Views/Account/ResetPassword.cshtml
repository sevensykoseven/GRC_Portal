@model protean.Models.ResetPasswordViewModel
@{
    Layout = "~/Views/Shared/_LayoutExternal.cshtml";
    ViewBag.Title = "Reset Password";
}

@section Styles {
    <link href="~/Content/css/login-v1.css" rel="stylesheet" type="text/css" />
}

<div id="login-page">

    <div class="kt-login-v1" id="kt_login_v1" style="">

        @*-- ITEM --*@
        <div class="" style="margin-bottom:100px;">

            @*-- BODY --*@
            <div class="kt-login-v1__body">

                @*-- SECTION --*@
                <div class="kt-login-v1__section">
                    <div class="kt-login-v1__info">
                        <h1 class="kt-login-v1__intro"><a href="/" class="text-decoration-none"><img src="~/Content/media/logos/GRCC_Logo_Horizontal_White.png" style="width:100%;height:auto;" alt="GRCC Logo"></a></h1>
                        <p>
                            / design-forward; quality made /
                        </p>
                    </div>
                </div>

                @*-- SEPERATOR --*@
                <div class="kt-login-v1__seaprator"></div>

                @*-- WRAPPER --*@
                <div class="kt-login-v1__wrapper">
                    <div class="kt-login-v1__container">

                        @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <h4 class="kt-login-v1__title">Reset your password</h4>
                            @Html.ValidationSummary("", new { @class = "PT-alert PT-alert-danger" })
                            @Html.HiddenFor(model => model.Code)
                            <div class="form-group">
                                @Html.LabelFor(m => m.Email, new { @class = "sr-only" })
                                @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "email ...", data_val_required = "Email is required", autofocus = "" } })

                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-validation-error" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Password, new { @class = "sr-only" })
                                @Html.EditorFor(m => m.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "password ...", data_val_required = "Password is required" } })

                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-validation-error" })

                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "sr-only" })
                                @Html.EditorFor(m => m.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "confirm password ...", data_val_required = "Password is required" } })

                                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-validation-error" })

                            </div>

                            <div class="kt-login-v1__actions">
                                <button type="submit" class="btn PT-btn-default btn-lg btn-block">RESET</button>
                            </div>
                        }

                    </div>
                </div>

            </div>

        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

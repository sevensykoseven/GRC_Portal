@model protean.Models.ChangePasswordViewModel
@{
    ViewBag.Title = "Profile - Change Password";
}

<div class="pt-page-header d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800"><i class="fa fa-user fa-fw mr-2"></i>My Profile</h1>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-xl-3 col-lg-9 mb-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <div class="flex-container">
                        <div>
                            <div class="kt-media kt-media--lg kt-media--circle">
                                @if (!String.IsNullOrWhiteSpace(Current.User.BadgePath))
                                {
                                    <img src="@Current.User.BadgePath" alt="image">
                                }
                                else
                                {
                                    <span class="pt-badgecolor">@Html.DisplayFor(x => Current.User.Initials)</span>
                                }
                            </div>
                        </div>
                        <div>
                            <div href="#" class="m-0 font-weight-bold text-primary">
                                @Current.User.FullName
                            </div>
                            <div class="pt-user__desc">
                                @Current.User.Title
                            </div>
                            @if (User.IsInRole("super"))
                            {
                                <div class="pt-user__desc">
                                    Roles: @String.Join(", ", Current.User.RoleNames().Select(x => x.ToString()).ToArray())
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="list-group list-group-flush">
                        <a class="list-group-item list-group-item-action " href="@Url.RouteUrl("profile")" role="tab">
                            <span class=""><i class="fas fa-id-card mr-2"></i></span>
                            <span class="">Personal Information</span>
                        </a>
                        <a class="list-group-item list-group-item-action " href="@Url.Action("ChangePassword")" role="tab">
                            <span class=""><i class="fas fa-cog mr-2"></i></span>
                            <span class="">Change Password</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-9 col-lg-9 mb-4">
            <div class="card shadow">
                <div class="card-header py-3">
                    <div class="flex-container">
                        <div class="">
                            <h6 class="m-0 font-weight-bold text-gray-600">Change Password</h6>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="form-group row">
                        @Html.LabelFor(m => m.OldPassword, htmlAttributes: new { @class = "col-xl-3 col-lg-3 col-form-label" })
                        <div class="col-lg-9 col-xl-6">
                            @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-validation-error" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(m => m.NewPassword, htmlAttributes: new { @class = "col-xl-3 col-lg-3 col-form-label" })
                        <div class="col-lg-9 col-xl-6">
                            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-validation-error" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(m => m.ConfirmPassword, htmlAttributes: new { @class = "col-xl-3 col-lg-3 col-form-label" })
                        <div class="col-lg-9 col-xl-6">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-validation-error" })
                        </div>
                    </div>
                    <div>
                        <div class="row">
                            <div class="col-lg-3 col-xl-3">
                            </div>
                            <div class="col-lg-9 col-xl-9">
                                <button type="submit" class="btn btn-primary">Save</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script type="text/javascript">


    </script>
}
